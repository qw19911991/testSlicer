{"version":3,"sources":["webpack://ContextMenu/webpack/universalModuleDefinition","webpack://ContextMenu/webpack/bootstrap","webpack://ContextMenu/./src/js/classes/ContextMenuItemTypes.js","webpack://ContextMenu/./src/js/defaults/index.js","webpack://ContextMenu/./src/js/contextmenu.js","webpack://ContextMenu/./src/js/classes/ContextMenu.js","webpack://ContextMenu/./src/js/classes/ContextMenuOperations.js","webpack://ContextMenu/./src/js/classes/ContextMenuHelper.js","webpack://ContextMenu/./src/js/defaults/position.js","webpack://ContextMenu/./src/js/classes/ContextMenuHtml5Builder.js","webpack://ContextMenu/./src/js/classes/ContextMenuEventHandler.js","webpack://ContextMenu/./src/js/jquery/contextMenuFunction.js"],"names":["root","factory","exports","module","define","amd","ContextMenu","window","e","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","simple","text","textarea","checkbox","radio","select","html","separator","submenu","_position","selector","appendTo","trigger","autoHide","delay","reposition","hideOnSecondTrigger","selectableSubMenu","className","classNames","hover","disabled","visible","notSelectable","icon","iconEdit","iconCut","iconCopy","iconPaste","iconDelete","iconAdd","iconQuit","iconLoadingClass","zIndex","animation","duration","show","hide","events","$","noop","activated","callback","items","build","types","determinePosition","position","positionSubmenu","a","manager","contextMenu","operation","options","execute","getInputValues","currentMenuData","data","setInputValues","fromMenu","element","html5builder","defaults","handle","handler","operations","menus","namespaces","fn","elementFunction","ContextMenuItemTypes","this","ContextMenuHtml5Builder","ContextMenuEventHandler","ContextMenuOperations","initialized","counter","normalizedArguments","normalizeArguments","update","destroy","html5","Error","buildOptions","document","body","each","id","css","_this","$visibleMenu","_hasContext","context","keys","forEach","is","filter","length","contextMenuRoot","$trigger","find","force","$menu","remove","off","$currentTrigger","match","isEmptyObject","itemClick","itemClickEvent","contextMenuItemObj","contextmenu:focus.contextMenu","focusItem","contextmenu:blur.contextMenu","blurItem","contextmenu.contextMenu","abortevent","mouseenter.contextMenu","itemMouseenter","mouseleave.contextMenu","itemMouseleave","on","contextmenu:hide.contextMenu","hideMenu","prevcommand.contextMenu","prevItem","nextcommand.contextMenu","nextItem","menuMouseenter","menuMouseleave","inputClick","contextmenu","mouseenter","mouseleave","click","_this2","menu","userOptions","extend","first","contextMenuData","inputs","item","type","selected","$input","val","prop","TypeError","menuData","x","y","additionalZValue","ContextMenuHelper","zindex","layer","addClass","pos","offset","right","left","outerWidth","bottom","top","outerHeight","$layer","hovering","pageX","pageY","setTimeout","_typeof","removeData","removeClass","$selected","rootMenuData","createNameNode","$name","_accesskey","_beforeAccesskey","append","createTextNode","_afterAccesskey","isHtmlName","accesskey","k","accesskeys","$t","$label","$node","contextMenuKey","ak","aks","splitAccesskey","matched","RegExp","commands","callbacks","hasTypes","attr","height","prependTo","then","processPromises","focusInput","blurInput","_icon","substring","prepend","support","eventSelectstart","nested","domMenu","display","getBoundingClientRect","Math","ceil","width","minWidth","maxWidth","index","resize","addBack","hasVisibleItems","children","$item","iconResult","$window","z-index","opacity","background-color","insertBefore","layerClick","style","promise","finishPromiseProcess","errorPromise","errorItem","error","console","log","$menuOffset","winHeight","winScrollTop","scrollTop","menuHeight","overflow-x","overflow-y","zin","$tt","max","parseInt","parent","indexOf","toLowerCase","split","charAt","toUpperCase","push","ui","my","at","of","collision","offsetParentOffset","offsetParent","scrollLeft","node","$this","$children","builder","nodeName","label","inputLabel","clone","hoveract","preventDefault","stopImmediatePropagation","currentTarget","originalEvent","mouseButton","hasClass","built","Event","button","$related","relatedTarget","$document","closest","mousemove","timer","clearTimeout","fakeClick","target","triggerAction","elementFromPoint","isContentEditable","range","createRange","sel","getSelection","selectNode","collapse","removeAllRanges","addRange","one","isInput","stopPropagation","targetZIndex","getZIndexOfTriggerTarget","parentElement","keyCode","keyStop","shiftKey","blur","$parent","itemdata","String","fromCharCode","$s","$prev","prev","last","$round","focus","$next","next","targetMenu","join","not","$o","isPlainObject"],"mappings":"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","file":"jquery.contextMenu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ContextMenu\"] = factory();\n\telse\n\t\troot[\"ContextMenu\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\n * @class ContextMenuItem\n * @instance\n * @interface\n * @classdesc The items map contains the commands to list in the menu. Each command has a unique key identifying an item object. The value may either be an item (properties explained below), or a string (which will insert a separator, disregarding the string's content). It is also possible to define a seperator the same as an item, and use the `type`:`cm_separator` to define it.\n\n ```javascript\n var items = {\n  firstCommand: itemOptions,\n  separator1: \"-----\",\n  separator2: { \"type\": \"cm_separator\" },\n  command2: itemOptions,\n  submenu: {\n    type: \"submenu\"\n    submenuItem1: itemOptions,\n    submenuItem2: itemOptions,\n  }\n}\n ```\n\n Since 2.3 it is also possible to use a promise as item, so you can build submenu's based on a snynchronous promis.\n\n Check out the [demo using a promise](demo/async-promise.md) for an example how to use this. The example uses jQuery deferred, but any promise should do. Promised can only be used in combination with the [build option](docs#build).\n\n *\n * @property {ContextMenuItemTypes|string} type - Specifies the type of the command. See {@link ContextMenuItemTypes}.\n * @property {string} name - Specify the human readable name of the command in the menu. This is used as the label for the option.\n * @property {boolean} isHtmlName - Should this item be called with .html() instead of .text(). Cannot be used with the accesskey option in the same item.\n * @property {Object.<string,ContextMenuItem>} items Object containing the menu items for creating a submenu.\n * @property {string} className - Specifies additional classNames to add to the menu item. Seperate multiple classes by using spaces.\n * @property {ContextMenuItemCallback} callback - Specifies the callback to execute if the item is clicked.\n * @property {ContextMenuIconCallback|string} icon - Specifies the icon class to set for the item. When using a string icons must be defined in CSS with selectors like `.context-menu-item.context-menu-icon-edit`, where edit is the icon class specified. When using a callback you can return a class string to use that as the class on the item. You can also modify the element by using the $itemElement argument.\n * @property {ContextMenuItemCallback|boolean} disabled - Specifies if the command is disabled (`true`) or enabled (`false`). May be a callback returning a `boolean`.\n * @property {ContextMenuItemCallback|boolean} visible - Specifies if the command is visible (`true`) or hidden (`false`). May be a callback returning a `boolean`.\n * @property {string} accesskey - Character(s) to be used as accesskey.\n\n Considering `a b c` $.contextMenu will first try to use »a« as the accesskey, if already taken, it'll fall through to `b`. Words are reduced to the first character, so `hello world` is treated as `h w`.\n\n Note: Accesskeys are treated unique throughout one menu. This means an item in a sub-menu can't occupy the same accesskey as an item in the main menu.\n *\n * @property {?JQuery} $input - The input element if it was build for this item.\n * @property {Object<string, Function>} events - Events to register on a {@link ContextMenuItem}. The contents of the options object are passed as jQuery `e.data`.\n * @property {string} value - The value of the `<input>` element.\n * @property {boolean|string} selected - The selected option of a `select` element and the checked property for `checkbox` and `radio` {@link ContextMenuItemTypes}.\n * @property {string} radio - Specifies the group of the `radio` element.\n * @property {string} options - Specifies the options of the `select` element.\n * @property {Number} height - The height in pixels `<textarea>` element. If not specified, the height is defined by CSS.\n */\n\n/**\n * Possible ContextMenuItem types\n * @enum string\n */\nconst ContextMenuItemTypes = {\n    /**\n     * The command is a simple clickable item.\n     */\n    simple: '',\n\n    /**\n     * Makes the command an &lt;input&gt; of type text. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    text: 'text',\n\n    /**\n     * Makes the command a &lt;textarea&gt;. The name followed by the &lt;textarea&gt; are encapsulated in a &lt;label&gt;.\n     */\n    textarea: 'textarea',\n\n    /**\n     * Makes the command an &lt;input&gt; of type checkbox. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    checkbox: 'checkbox',\n\n    /**\n     * Makes the command an &lt;input&gt; of type radio. The name followed by the &lt;input&gt; are encapsulated in a &lt;label&gt;.\n     */\n    radio: 'radio',\n\n    /**\n     * Makes the command aa &lt;select&gt;. The name followed by the &lt;select&gt; are encapsulated in a &lt;label&gt;.\n     */\n    select: 'select',\n\n    /**\n     * Makes an non-command element. When you select `type: 'html'` add the html to the html property. So: `{ item: { type: 'html', html: '<span>html!</span>' } }`. You can also just use the item name with the `isHtmlName` property.\n     */\n    html: 'html',\n\n    /**\n     * Internal property, used internally when the type is set to a string.\n     */\n    separator: 'cm_separator',\n\n    /**\n     * Internal property for a {@link ContextMenuItem} that has an `items` property with other {@link ContextMenuItem} items.\n     */\n    submenu: 'sub'\n};\n\nexport default ContextMenuItemTypes;\n","import {determinePosition, positionSubmenu, position} from './position';\n\n/**\n * @class ContextMenuData\n * @augments ContextMenuOptions\n * @instance\n * @interface\n *\n * @property {JQuery} $menu - The menu element for this menu part. Eg. the root menu, or a single submenu.\n * @property {JQuery} $layer - The opened layer when the menu is opened.\n * @property {JQuery} $node - The menu node.\n * @property {JQuery} $trigger - The element that triggered opening the menu.\n * @property {JQuery} $selected - Reference to the `<li>` command element.\n * @property {JQuery} $input - Reference to the `<input>` or `<select>` of the command element.\n * @property {JQuery} $label - Reference to the `<input>` or `<select>` of the command element.\n * @property {string} ns - The namespace (including leading dot) all events for this contextMenu instance were registered under.\n * @property {ContextMenu} manager - The contextmenu manager instance.\n * @property {JQuery|jQuery|null} $selected - Currently selected menu item, or input inside menu item.\n * @property {?boolean} hasTypes - The menu has ContextMenuItem which are of a selectable type.\n * @property {?boolean} isInput - We are currently originating events from an input.\n * @property {Object<string, ContextMenuItem>} inputs - Inputs defined in the menu.\n * @property {Object<string, ContextMenuItemTypeCallback>} types - Custom ContextMenuItemTypes, key is the {@link ContextMenuItem} type property, value is a {@link ContextMenuItemTypeCallback} callback.\n *\n * @property {boolean} hovering Currently hovering, root menu only.\n */\n\n/**\n * @class ContextMenuOptions\n * @instance\n * @interface\n * @classdesc\n ## Register new contextMenu\n\n To register a new contextMenu:\n\n ```javascript\n $.contextMenu( contextMenuOptions );\n ```\n\n ## Update contextMenu state\n\n It is possible to refresh the state of the contextmenu [disabled](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#disabled), [visibility](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#visible), [icons](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#icon) and [input values](https://swisnl.github.io/jQuery-contextMenu/docs/items.html#type) through the `update` command. This will reevaluate any custom callbacks.\n\n ```javascript\n $('.context-menu-one').contextMenu('update'); // update single menu\n $.contextMenu('update') // update all open menus\n ```\n\n * @property {null|string} selector - Selector on which the contextMenu triggers.\n * @property {Object.<string, ContextMenuItem>} items - Object with items to be listed in contextMenu. See {@link ContextMenuItem} for a full documentation on how to build your menu items.\n * @property {JQuery.Selector|DOMElement} [appendTo=document.body] - Specifies the selector `string` or `DOMElement` the generated menu is to be appended to.\n * @property {('right'|'left'|'hover'|'touchstart'|'none')} trigger=left - Method to trigger context menu [\"right\", \"left\", \"hover\", \"touchstart\", \"none\"].\n * @property {?string} itemClickEvent - Allows the selection of the click event instead of the mouseup event to handle the user mouse interaction with the contexMenu. The default event is `mouseup`. Set the option to `\"click\"` to change to the `click` event.\n\n This option is global: the first contexMenu registered sets it. To change it afterwards all the contextMenu have to be unregistered with `$.contextMenu( 'destroy' );` before the change has effect again.\n\n * @property {boolean} hideOnSecondTrigger=false - Flag denoting if a second trigger should close the menu, as long as the trigger happened on one of the trigger-element's child nodes. This overrides the reposition option.\n * @property {boolean} selectableSubMenu=false - Ability to select ContextMenuItem containing a submenu.\n * @property {boolean} reposition=true - flag denoting if a second trigger should simply move (`true`) or rebuild (`false`) an open menu as long as the trigger happened on one of the trigger-element's child nodes\n * @property {number} delay=200 - ms to wait before showing a hover-triggered context menu.\n * @property {boolean} autoHide=true - Hide menu when mouse leaves trigger / menu elements.\n * @property {number|Function} zIndex=1 - offset to add to zIndex\n * @property {string} className - Class to be appended to the root menu.\n * @property {Object} classNames - Default classname configuration to be able avoid conflicts in frameworks.\n * @property {string} classNames.hover=context-menu-hover\n * @property {string} classNames.disabled=context-menu-disabled\n * @property {string} classNames.visible=context-menu-visible\n * @property {string} classNames.notSelectable=context-menu-not-selectable\n * @property {string} classNames.icon=context-menu-icon\n * @property {string} classNames.iconEdit=context-menu-icon-edit\n * @property {string} classNames.iconCut=context-menu-icon-cut\n * @property {string} classNames.iconCopy=context-menu-icon-copy\n * @property {string} classNames.iconPaste=context-menu-icon-paste\n * @property {string} classNames.iconDelete=context-menu-icon-delete\n * @property {string} classNames.iconAdd=context-menu-icon-add\n * @property {string} classNames.iconQuit=context-menu-icon-quit\n * @property {string} classNames.iconLoadingClass=context-menu-icon-loading\n * @property {Object} animation - Animation settings\n * @property {number} animation.duration=50\n * @property {string} animation.show='slideDown'\n * @property {string} animation.hide='slideUp'\n * @property {Object} events - Event callbacks. This is the trigger element, first argument is the event, and the second argumant {@link ContextMenuData}.\n * @property {Function} events.show - Called when contextmenu is shown.\n * @property {Function} events.hide - Called when contextmenu is hidden.\n * @property {Function} events.activated - Called when contextmenu is activated.\n * @property {ContextMenuItemCallback} callback - Global callback called then a {@link ContextMenuItem} is clicked.\n * @property {ContextMenuBuildCallback} build=false\n * @property {(position)} position - Callback to override the position of the context menu. The function is executed in the context of the trigger object.\n\n The first argument is a jQuery.Event. The second argument is the {@link ContextMenuData} object, which has a `$menu` property with the menu that needs to be positioned. The third and fourth arguments are `x` and `y` coordinates provided by the show event.\n\n The `x` and `y` may either be integers denoting the offset from the top left corner, undefined, or the string \"maintain\". If the string \"maintain\" is provided, the current position of the `$menu` must be used. If the coordinates are `undefined`, appropriate coordinates must be determined. An example of how this can be achieved is provided with {@link determinePosition}.\n\n * @property {(determinePosition)} determinePosition\n * @property {(positionSubmenu)} positionSubmenu - Callback tha positions a submenu\n * @property {boolean} _hasContext - Set to true if the call was done from an element.\n */\nexport default {\n    selector: null,\n\n    // where to append the menu to\n    appendTo: null,\n\n    // method to trigger context menu [\"right\", \"left\", \"hover\"]\n    trigger: 'right',\n\n    // hide menu when mouse leaves trigger / menu elements\n    autoHide: false,\n\n    // ms to wait before showing a hover-triggered context menu\n    delay: 200,\n\n    // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\n    // as long as the trigger happened on one of the trigger-element's child nodes\n    reposition: true,\n\n    // Flag denoting if a second trigger should close the menu, as long as\n    // the trigger happened on one of the trigger-element's child nodes.\n    // This overrides the reposition option.\n    hideOnSecondTrigger: false,\n\n    // ability to select submenu\n    selectableSubMenu: false,\n\n    className: '',\n\n    // Default classname configuration to be able avoid conflicts in frameworks\n    classNames: {\n        hover: 'context-menu-hover', // Item hover\n        disabled: 'context-menu-disabled', // Item disabled\n        visible: 'context-menu-visible', // Item visible\n        notSelectable: 'context-menu-not-selectable', // Item not selectable\n\n        icon: 'context-menu-icon',\n        iconEdit: 'context-menu-icon-edit',\n        iconCut: 'context-menu-icon-cut',\n        iconCopy: 'context-menu-icon-copy',\n        iconPaste: 'context-menu-icon-paste',\n        iconDelete: 'context-menu-icon-delete',\n        iconAdd: 'context-menu-icon-add',\n        iconQuit: 'context-menu-icon-quit',\n        iconLoadingClass: 'context-menu-icon-loading'\n    },\n\n    // offset to add to zIndex\n    zIndex: 1,\n\n    // show hide animation settings\n    animation: {\n        duration: 50,\n        show: 'slideDown',\n        hide: 'slideUp'\n    },\n\n    // events\n    events: {\n        show: $.noop,\n        hide: $.noop,\n        activated: $.noop\n    },\n\n    // default callback\n    callback: null,\n\n    // list of contextMenu items\n    items: {},\n\n    // Build callback for creating a menu dynamicly\n    build: false,\n\n    types: {},\n\n    // determine position to show menu at\n    determinePosition,\n\n    // position menu\n    position,\n\n    // position the sub-menu\n    positionSubmenu\n};\n","'use strict';\nimport '../sass/jquery.contextMenu.scss';\nimport ContextMenu from './classes/ContextMenu';\nimport ContextMenuItemTypes from './classes/ContextMenuItemTypes';\nimport elementFunction from './jquery/contextMenuFunction';\n\n/**\n * The jQuery namespace.\n * @external \"jQuery\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * @class jQuery.contextMenu\n * @function external:jQuery.contextMenu\n * @instance\n *\n * @param {string} operation\n * @param {ContextMenuOptions} options\n *\n * @property {ContextMenu} manager\n * @property {getInputValues} getInputValues\n * @property {setInputValues} setInputValues\n * @property {fromMenu} ContextMenuHtml5Builder#fromMenu\n * @property {ContextMenuOptions} defaults\n * @property {ContextMenuEventHandler} handle\n * @property {ContextMenuOperations} operations\n * @property {Object<string, ContextMenuData>} menus\n */\nconst manager = new ContextMenu();\n\n// manage contextMenu instances\nlet contextMenu = function (operation, options) {\n    manager.execute(operation, options);\n};\n\ncontextMenu.getInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.setInputValues = function (currentMenuData, data) {\n    return manager.getInputValues(currentMenuData, data);\n};\ncontextMenu.fromMenu = function (element) {\n    return manager.html5builder.fromMenu(element);\n};\n\n// make defaults accessible\ncontextMenu.defaults = manager.defaults;\ncontextMenu.types = manager.defaults.types;\ncontextMenu.manager = manager;\n\n// export internal functions - undocumented, for hacking only!\ncontextMenu.handle = manager.handler;\ncontextMenu.operations = manager.operations;\ncontextMenu.menus = manager.menus;\ncontextMenu.namespaces = manager.namespaces;\n\n$.fn.contextMenu = elementFunction;\n$.contextMenu = contextMenu;\n\nmodule.exports = {ContextMenu, ContextMenuItemTypes};\n","import ContextMenuOperations from './ContextMenuOperations';\nimport defaults from '../defaults';\nimport ContextMenuHtml5Builder from './ContextMenuHtml5Builder';\nimport ContextMenuEventHandler from './ContextMenuEventHandler';\n\nexport default class ContextMenu {\n    /**\n     * @constructor\n     * @constructs ContextMenu\n     * @classdesc The ContextMenu is the core class that manages contextmenu's. You can call this class directly and skip going through jQuery.\n     * @class ContextMenu\n     *\n     * @example\n     * // You can call this class directly and skip going through jQuery, although it still requires jQuery to run.\n     * const manager = new ContextMenu();\n     * manager.execute(\"create\", options);\n     *\n     * @property {ContextMenuOptions|Object} defaults\n     * @property {ContextMenuEventHandler} handle\n     * @property {ContextMenuOperations} operations\n     * @property {Object<string, ContextMenuData>} menus\n     * @property {number} counter - Internal counter to keep track of different menu's on the page.\n     * @property {boolean} initialized - Flag the menu as initialized.\n     */\n    constructor() {\n        this.html5builder = new ContextMenuHtml5Builder();\n        this.defaults = defaults;\n        this.handler = new ContextMenuEventHandler();\n        this.operations = new ContextMenuOperations();\n        this.namespaces = {};\n        this.initialized = false;\n        this.menus = {};\n        this.counter = 0;\n    }\n\n    /**\n     * @method execute\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {(string|ContextMenuOptions)} operation\n     * @param {(string|ContextMenuOptions)} options\n     * @return {ContextMenu}\n     */\n    execute(operation, options) {\n        const normalizedArguments = this.normalizeArguments(operation, options);\n        operation = normalizedArguments.operation;\n        options = normalizedArguments.options;\n\n        switch (operation) {\n            case 'update':\n                // Updates visibility and such\n                this.update(options);\n                break;\n\n            case 'create':\n                // no selector no joy\n                this.create(options);\n                break;\n\n            case 'destroy':\n                this.destroy(options);\n                break;\n\n            case 'html5':\n                this.html5(options);\n                break;\n\n            default:\n                throw new Error('Unknown operation \"' + operation + '\"');\n        }\n\n        return this;\n    }\n\n    /**\n     * if <menuitem> is not handled by the browser, or options was a bool true, initialize $.contextMenu for them.\n     * @method html5\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions|boolean} options\n     */\n    html5(options) {\n        options = this.buildOptions(options);\n\n        const menuItemSupport = ('contextMenu' in document.body && 'HTMLMenuItemElement' in window);\n\n        if (!menuItemSupport || (typeof options === 'boolean' && options === true)) {\n            $('menu[type=\"context\"]').each(function () {\n                if (this.id) {\n                    $.contextMenu({\n                        selector: '[contextmenu=' + this.id + ']',\n                        items: $.contextMenu.fromMenu(this)\n                    });\n                }\n            }).css('display', 'none');\n        }\n    }\n\n    /**\n     * Destroy the ContextMenu\n     * @method destroy\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    destroy(options) {\n        options = this.buildOptions(options);\n\n        let $visibleMenu;\n        if (options._hasContext) {\n            // get proper options\n            const context = options.context;\n\n            Object.keys(this.menus).forEach((ns) => {\n                let o = this.menus[ns];\n\n                if (!o) {\n                    return true;\n                }\n\n                // Is this menu equest to the context called from\n                if (!$(context).is(o.selector)) {\n                    return true;\n                }\n\n                $visibleMenu = $('.context-menu-list').filter(':visible');\n                if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\n                    $visibleMenu.trigger('contextmenu:hide', {force: true});\n                }\n\n                if (this.menus[o.ns].$menu) {\n                    this.menus[o.ns].$menu.remove();\n                }\n                delete this.menus[o.ns];\n\n                $(o.context).off(o.ns);\n                return true;\n            });\n        } else if (!options.selector) {\n            $(document).off('.contextMenu .contextMenuAutoHide');\n\n            Object.keys(this.menus).forEach((ns) => {\n                let o = this.menus[ns];\n                $(o.context).off(o.ns);\n            });\n\n            this.namespaces = {};\n            this.menus = {};\n            this.counter = 0;\n            this.initialized = false;\n\n            $('#context-menu-layer, .context-menu-list').remove();\n        } else if (this.namespaces[options.selector]) {\n            $visibleMenu = $('.context-menu-list').filter(':visible');\n            if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(options.selector)) {\n                $visibleMenu.trigger('contextmenu:hide', {force: true});\n            }\n\n            if (this.menus[this.namespaces[options.selector]].$menu) {\n                this.menus[this.namespaces[options.selector]].$menu.remove();\n            }\n            delete this.menus[this.namespaces[options.selector]];\n\n            $(document).off(this.namespaces[options.selector]);\n        }\n        this.handler.$currentTrigger = null;\n    }\n\n    /**\n     * Create a ContextMenu\n     * @method create\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    create(options) {\n        options = this.buildOptions(options);\n\n        if (!options.selector) {\n            throw new Error('No selector specified');\n        }\n        // make sure internal classes are not bound to\n        if (options.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\n            throw new Error('Cannot bind to selector \"' + options.selector + '\" as it contains a reserved className');\n        }\n        if (!options.build && (!options.items || $.isEmptyObject(options.items))) {\n            throw new Error('No Items specified');\n        }\n        this.counter++;\n        options.ns = '.contextMenu' + this.counter;\n        if (!options._hasContext) {\n            this.namespaces[options.selector] = options.ns;\n        }\n        this.menus[options.ns] = options;\n\n        // default to right click\n        if (!options.trigger) {\n            options.trigger = 'right';\n        }\n\n        if (!this.initialized) {\n            const itemClick = options.itemClickEvent === 'click' ? 'click.contextMenu' : 'mouseup.contextMenu';\n            const contextMenuItemObj = {\n                // 'mouseup.contextMenu': this.handler.itemClick,\n                // 'click.contextMenu': this.handler.itemClick,\n                'contextmenu:focus.contextMenu': this.handler.focusItem,\n                'contextmenu:blur.contextMenu': this.handler.blurItem,\n                'contextmenu.contextMenu': this.handler.abortevent,\n                'mouseenter.contextMenu': this.handler.itemMouseenter,\n                'mouseleave.contextMenu': this.handler.itemMouseleave\n            };\n            contextMenuItemObj[itemClick] = this.handler.itemClick;\n\n            // make sure item click is registered first\n            $(document)\n                .on({\n                    'contextmenu:hide.contextMenu': this.handler.hideMenu,\n                    'prevcommand.contextMenu': this.handler.prevItem,\n                    'nextcommand.contextMenu': this.handler.nextItem,\n                    'contextmenu.contextMenu': this.handler.abortevent,\n                    'mouseenter.contextMenu': this.handler.menuMouseenter,\n                    'mouseleave.contextMenu': this.handler.menuMouseleave\n                }, '.context-menu-list')\n                .on('mouseup.contextMenu', '.context-menu-input', this.handler.inputClick)\n                .on(contextMenuItemObj, '.context-menu-item');\n\n            this.initialized = true;\n        }\n\n        // engage native contextmenu event\n        options.context\n            .on('contextmenu' + options.ns, options.selector, options, this.handler.contextmenu);\n\n        switch (options.trigger) {\n            case 'hover':\n                options.context\n                    .on('mouseenter' + options.ns, options.selector, options, this.handler.mouseenter)\n                    .on('mouseleave' + options.ns, options.selector, options, this.handler.mouseleave);\n                break;\n\n            case 'left':\n                options.context.on('click' + options.ns, options.selector, options, this.handler.click);\n                break;\n            case 'touchstart':\n                options.context.on('touchstart' + options.ns, options.selector, options, this.handler.click);\n                break;\n            /*\n                     default:\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\n                     $document\n                     .on('mousedown' + o.ns, o.selector, o, this.handler.mousedown)\n                     .on('mouseup' + o.ns, o.selector, o, this.handler.mouseup);\n                     break;\n                     */\n        }\n\n        // create menu\n        if (!options.build) {\n            this.operations.create(null, options);\n        }\n    }\n\n    /**\n     * Update the ContextMenu or all ContextMenu's\n     * @method update\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} options\n     */\n    update(options) {\n        options = this.buildOptions(options);\n\n        if (options._hasContext) {\n            this.operations.update(null, $(options.context).data('contextMenu'), $(options.context).data('contextMenuRoot'));\n        } else {\n            Object.keys(this.menus).forEach((menu) => {\n                this.operations.update(null, this.menus[menu]);\n            });\n        }\n    }\n\n    /**\n     * Build the options, by applying the Manager, defaults, user options and normalizing the context.\n     * @method buildOptions\n     * @memberOf ContextMenu\n     *\n     * @param {ContextMenuOptions} userOptions\n     * @return {ContextMenuOptions}\n     */\n    buildOptions(userOptions) {\n        if (typeof userOptions === 'string') {\n            userOptions = {selector: userOptions};\n        }\n\n        const options = $.extend(true, {manager: this}, this.defaults, userOptions);\n\n        if (!options.context || !options.context.length) {\n            options.context = $(document);\n            options._hasContext = false;\n        } else {\n            // you never know what they throw at you...\n            options.context = $(options.context).first();\n            options._hasContext = !$(options.context).is($(document));\n        }\n        return options;\n    }\n\n    /**\n     * @method normalizeArguments\n     * @memberOf ContextMenu\n     *\n     * @param {string|Object} operation\n     * @param {string|Object|ContextMenuOptions} options\n     * @returns {{operation: string, options: ContextMenuOptions}}\n     */\n    normalizeArguments(operation, options) {\n        if (typeof operation !== 'string') {\n            options = operation;\n            operation = 'create';\n        }\n\n        if (typeof options === 'string') {\n            options = {selector: options};\n        } else if (typeof options === 'undefined') {\n            options = {};\n        }\n        return {operation, options};\n    }\n\n    /**\n     * import values into `<input>` commands\n     *\n     * @method setInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values to set\n     * @return {undefined}\n     */\n    setInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                    item.value = data[key] || '';\n                    break;\n\n                case 'checkbox':\n                    item.selected = !!data[key];\n                    break;\n\n                case 'radio':\n                    item.selected = (data[item.radio] || '') === item.value;\n                    break;\n\n                case 'select':\n                    item.selected = data[key] || '';\n                    break;\n            }\n        });\n    }\n\n    /**\n     * export values from `<input>` commands\n     *\n     * @method getInputValues\n     * @memberOf ContextMenu\n     * @instance\n     *\n     * @param {ContextMenuData} contextMenuData - {@link ContextMenuData} object\n     * @param {Object} data - Values object\n     * @return {Object} - Values of input elements\n     */\n    getInputValues(contextMenuData, data) {\n        if (typeof data === 'undefined') {\n            data = {};\n        }\n\n        $.each(contextMenuData.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                case 'select':\n                    data[key] = item.$input.val();\n                    break;\n\n                case 'checkbox':\n                    data[key] = item.$input.prop('checked');\n                    break;\n\n                case 'radio':\n                    if (item.$input.prop('checked')) {\n                        data[item.radio] = item.value;\n                    }\n                    break;\n            }\n        });\n\n        return data;\n    }\n}\n","import ContextMenuHelper from './ContextMenuHelper';\nimport ContextMenuItemTypes from './ContextMenuItemTypes';\n\nexport default class ContextMenuOperations {\n    /**\n     * @constructor\n     * @constructs ContextMenuOperations\n     */\n    constructor() {\n        return this;\n    }\n\n    /**\n     * Show the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} x\n     * @param {number} y\n     */\n    show(e, menuData, x, y) {\n        const $trigger = $(this);\n        const css = {};\n\n        // hide any open menus\n        $('#context-menu-layer').trigger('mousedown');\n\n        // backreference for callbacks\n        menuData.$trigger = $trigger;\n\n        // show event\n        if (menuData.events.show.call($trigger, e, menuData) === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n\n        // create or update context menu\n        let hasVisibleItems = menuData.manager.operations.update.call($trigger, e, menuData);\n\n        if (hasVisibleItems === false) {\n            menuData.manager.handler.$currentTrigger = null;\n            return;\n        }\n        // position menu\n        menuData.position.call($trigger, e, menuData, x, y);\n\n        // make sure we're in front\n        if (menuData.zIndex) {\n            let additionalZValue = menuData.zIndex;\n            // If menuData.zIndex is a function, call the function to get the right zIndex.\n            if (typeof menuData.zIndex === 'function') {\n                additionalZValue = menuData.zIndex.call($trigger, menuData);\n            }\n            css.zIndex = ContextMenuHelper.zindex($trigger) + additionalZValue;\n        }\n\n        // add layer\n        menuData.manager.operations.layer.call(menuData.$menu, e, menuData, css.zIndex);\n\n        // adjust sub-menu zIndexes\n        menuData.$menu.find('ul').css('zIndex', css.zIndex + 1);\n\n        // position and show context menu\n        menuData.$menu.css(css)[menuData.animation.show](menuData.animation.duration, () => {\n            $trigger.trigger('contextmenu:visible');\n\n            menuData.manager.operations.activated(e, menuData);\n            menuData.events.activated($trigger, e, menuData);\n        });\n        // make options available and set state\n        $trigger\n            .data('contextMenu', menuData)\n            .addClass('context-menu-active');\n\n        // register key handler\n        $(document).off('keydown.contextMenu').on('keydown.contextMenu', menuData, menuData.manager.handler.key);\n        // register autoHide handler\n        if (menuData.autoHide) {\n            // mouse position handler\n            $(document).on('mousemove.contextMenuAutoHide', (e) => {\n                // need to capture the offset on mousemove,\n                // since the page might've been scrolled since activation\n                const pos = $trigger.offset();\n                pos.right = pos.left + $trigger.outerWidth();\n                pos.bottom = pos.top + $trigger.outerHeight();\n\n                if (menuData.$layer && !menuData.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\n                    /* Additional hover check after short time, you might just miss the edge of the menu */\n                    setTimeout(() => {\n                        if (!menuData.hovering && menuData.$menu !== null && typeof menuData.$menu !== 'undefined') {\n                            menuData.$menu.trigger('contextmenu:hide');\n                        }\n                    }, 50);\n                }\n            });\n        }\n    }\n\n    /**\n     * Hide the menu.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {boolean} force\n     */\n    hide(e, menuData, force) {\n        const $trigger = $(this);\n        if (typeof menuData !== 'object' && $trigger.data('contextMenu')) {\n            menuData = $trigger.data('contextMenu');\n        } else if (typeof menuData !== 'object') {\n            return;\n        }\n\n        // hide event\n        if (!force && menuData.events && menuData.events.hide.call($trigger, e, menuData) === false) {\n            return;\n        }\n\n        // remove options and revert state\n        $trigger\n            .removeData('contextMenu')\n            .removeClass('context-menu-active');\n\n        if (menuData.$layer) {\n            // keep layer for a bit so the contextmenu event can be aborted properly by opera\n            setTimeout((function ($layer) {\n                return function () {\n                    $layer.remove();\n                };\n            })(menuData.$layer), 10);\n\n            try {\n                delete menuData.$layer;\n            } catch (e) {\n                menuData.$layer = null;\n            }\n        }\n\n        // remove handle\n        menuData.manager.handler.$currentTrigger = null;\n        // remove selected\n        menuData.$menu.find('.' + menuData.classNames.hover).trigger('contextmenu:blur');\n        menuData.$selected = null;\n        // collapse all submenus\n        menuData.$menu.find('.' + menuData.classNames.visible).removeClass(menuData.classNames.visible);\n        // unregister key and mouse handlers\n        $(document).off('.contextMenuAutoHide').off('keydown.contextMenu');\n        // hide menu\n        if (menuData.$menu) {\n            menuData.$menu[menuData.animation.hide](menuData.animation.duration, () => {\n                // tear down dynamically built menu after animation is completed.\n                if (menuData.build) {\n                    menuData.$menu.remove();\n                    Object.keys(menuData).forEach((key) => {\n                        switch (key) {\n                            case 'ns':\n                            case 'selector':\n                            case 'build':\n                            case 'trigger':\n                                return true;\n\n                            default:\n                                menuData[key] = undefined;\n                                try {\n                                    delete menuData[key];\n                                } catch (e) {\n                                }\n                                return true;\n                        }\n                    });\n                }\n\n                setTimeout(() => {\n                    $trigger.trigger('contextmenu:hidden');\n                }, 10);\n            });\n        }\n    }\n\n    /**\n     * Create a menu based on the options. Also created submenus.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     */\n    create(e, currentMenuData, rootMenuData) {\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n        }\n\n        // create contextMenu\n        currentMenuData.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(currentMenuData.className || '').data({\n            'contextMenu': currentMenuData,\n            'contextMenuRoot': rootMenuData\n        });\n\n        ['callbacks', 'commands', 'inputs'].forEach((k) => {\n            currentMenuData[k] = {};\n            if (!rootMenuData[k]) {\n                rootMenuData[k] = {};\n            }\n        });\n\n        if (!rootMenuData.accesskeys) {\n            rootMenuData.accesskeys = {};\n        }\n\n        function createNameNode(item) {\n            const $name = $('<span></span>');\n            if (item._accesskey) {\n                if (item._beforeAccesskey) {\n                    $name.append(document.createTextNode(item._beforeAccesskey));\n                }\n                $('<span></span>')\n                    .addClass('context-menu-accesskey')\n                    .text(item._accesskey)\n                    .appendTo($name);\n                if (item._afterAccesskey) {\n                    $name.append(document.createTextNode(item._afterAccesskey));\n                }\n            } else {\n                if (item.isHtmlName) {\n                    // restrict use with access keys\n                    if (typeof item.accesskey !== 'undefined') {\n                        throw new Error('accesskeys are not compatible with HTML names and cannot be used together in the same item');\n                    }\n                    $name.html(item.name);\n                } else {\n                    $name.text(item.name);\n                }\n            }\n            return $name;\n        }\n\n        // create contextMenu items\n        Object.keys(currentMenuData.items).forEach((key) => {\n            let item = currentMenuData.items[key];\n            let $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || '');\n            let $label = null;\n            let $input = null;\n\n            // iOS needs to see a click-event bound to an element to actually\n            // have the TouchEvents infrastructure trigger the click event\n            $t.on('click', $.noop);\n\n            // Make old school string separator a real item so checks wont be\n            // awkward later.\n            // And normalize 'cm_separator' into 'cm_separator'.\n            if (typeof item === 'string' || item.type === 'cm_seperator') {\n                item = {type: ContextMenuItemTypes.separator};\n            }\n\n            item.$node = $t.data({\n                'contextMenu': currentMenuData,\n                'contextMenuRoot': rootMenuData,\n                'contextMenuKey': key\n            });\n\n            // register accesskey\n            // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\n            if (typeof item.accesskey !== 'undefined') {\n                const aks = ContextMenuHelper.splitAccesskey(item.accesskey);\n                for (let i = 0, ak; ak = aks[i]; i++) {\n                    if (!rootMenuData.accesskeys[ak]) {\n                        rootMenuData.accesskeys[ak] = item;\n                        const matched = item.name.match(new RegExp('^(.*?)(' + ak + ')(.*)$', 'i'));\n                        if (matched) {\n                            item._beforeAccesskey = matched[1];\n                            item._accesskey = matched[2];\n                            item._afterAccesskey = matched[3];\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (item.type && rootMenuData.types[item.type]) {\n                // run custom type handler\n                rootMenuData.types[item.type].call($t, e, item, currentMenuData, rootMenuData);\n                // register commands\n                [currentMenuData, rootMenuData].forEach((k) => {\n                    k.commands[key] = item;\n                    // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                    // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                    if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                        k.callbacks[key] = item.callback;\n                    }\n                });\n            } else {\n                // add label for input\n                if (item.type === ContextMenuItemTypes.separator) {\n                    $t.addClass('context-menu-separator ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type === ContextMenuItemTypes.html) {\n                    $t.addClass('context-menu-html ' + rootMenuData.classNames.notSelectable);\n                } else if (item.type && item.type !== ContextMenuItemTypes.submenu) {\n                    $label = $('<label></label>').appendTo($t);\n                    createNameNode(item).appendTo($label);\n\n                    $t.addClass('context-menu-input');\n                    currentMenuData.hasTypes = true;\n                    [currentMenuData, rootMenuData].forEach((k) => {\n                        k.commands[key] = item;\n                        k.inputs[key] = item;\n                    });\n                } else if (item.items) {\n                    item.type = ContextMenuItemTypes.submenu;\n                }\n\n                switch (item.type) {\n                    case ContextMenuItemTypes.separator:\n                        break;\n\n                    case ContextMenuItemTypes.text:\n                        $input = $('<input type=\"text\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.textarea:\n                        $input = $('<textarea name=\"\"></textarea>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .appendTo($label);\n\n                        if (item.height) {\n                            $input.height(item.height);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                        $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + key)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.radio:\n                        $input = $('<input type=\"radio\" value=\"1\" name=\"\" />')\n                            .attr('name', 'context-menu-input-' + item.radio)\n                            .val(item.value || '')\n                            .prop('checked', !!item.selected)\n                            .prependTo($label);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        $input = $('<select name=\"\"></select>')\n                            .attr('name', 'context-menu-input-' + key)\n                            .appendTo($label);\n                        if (item.options) {\n                            Object.keys(item.options).forEach((value) => {\n                                $('<option></option>').val(value).text(item.options[value]).appendTo($input);\n                            });\n                            $input.val(item.selected);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.submenu:\n                        createNameNode(item).appendTo($t);\n                        item.appendTo = item.$node;\n                        $t.data('contextMenu', item).addClass('context-menu-submenu');\n                        item.callback = null;\n\n                        // If item contains items, and this is a promise, we should create it later\n                        // check if subitems is of type promise. If it is a promise we need to create\n                        // it later, after promise has been resolved.\n                        if (typeof item.items.then === 'function') {\n                            // probably a promise, process it, when completed it will create the sub menu's.\n                            rootMenuData.manager.operations.processPromises(e, item, rootMenuData, item.items);\n                        } else {\n                            // normal submenu.\n                            rootMenuData.manager.operations.create(e, item, rootMenuData);\n                        }\n                        break;\n\n                    case ContextMenuItemTypes.html:\n                        $(item.html).appendTo($t);\n                        break;\n\n                    default:\n                        [currentMenuData, rootMenuData].forEach((k) => {\n                            k.commands[key] = item;\n                            // Overwrite only if undefined or the item is appended to the rootMenuData. This so it\n                            // doesn't overwrite callbacks of rootMenuData elements if the name is the same.\n                            if (typeof item.callback === 'function' && (typeof k.callbacks[key] === 'undefined' || typeof currentMenuData.type === 'undefined')) {\n                                k.callbacks[key] = item.callback;\n                            }\n                        });\n                        createNameNode(item).appendTo($t);\n                        break;\n                }\n\n                // disable key listener in <input>\n                if (item.type && item.type !== ContextMenuItemTypes.submenu && item.type !== ContextMenuItemTypes.html && item.type !== ContextMenuItemTypes.separator) {\n                    $input\n                        .on('focus', rootMenuData.manager.handler.focusInput)\n                        .on('blur', rootMenuData.manager.handler.blurInput);\n\n                    if (item.events) {\n                        $input.on(item.events, currentMenuData);\n                    }\n                }\n\n                // add icons\n                if (item.icon) {\n                    if (typeof item.icon === 'function') {\n                        item._icon = item.icon.call(this, e, $t, key, item, currentMenuData, rootMenuData);\n                    } else {\n                        if (typeof item.icon === 'string' && (\n                            item.icon.substring(0, 4) === 'fab ' ||\n                            item.icon.substring(0, 4) === 'fas ' ||\n                            item.icon.substring(0, 4) === 'far ' ||\n                            item.icon.substring(0, 4) === 'fal ')\n                        ) {\n                            // to enable font awesome\n                            $t.addClass(rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '--fa5');\n                            item._icon = $('<i class=\"' + item.icon + '\"></i>');\n                        } else if (typeof item.icon === 'string' && item.icon.substring(0, 3) === 'fa-') {\n                            // to enable font awesome\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '--fa fa ' + item.icon;\n                        } else {\n                            item._icon = rootMenuData.classNames.icon + ' ' + rootMenuData.classNames.icon + '-' + item.icon;\n                        }\n                    }\n                    if (typeof item._icon === 'string') {\n                        $t.addClass(item._icon);\n                    } else {\n                        $t.prepend(item._icon);\n                    }\n                }\n            }\n\n            // cache contained elements\n            item.$input = $input;\n            item.$label = $label;\n\n            // attach item to menu\n            $t.appendTo(currentMenuData.$menu);\n\n            // Disable text selection\n            if (!currentMenuData.hasTypes && $.support.eventSelectstart) {\n                // browsers support user-select: none,\n                // IE has a special event for text-selection\n                // browsers supporting neither will not be preventing text-selection\n                $t.on('selectstart.disableTextSelect', currentMenuData.manager.handler.abortevent);\n            }\n        });\n        // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\n        if (!currentMenuData.$node) {\n            currentMenuData.$menu.css('display', 'none').addClass('context-menu-rootMenuData');\n        }\n        currentMenuData.$menu.appendTo(currentMenuData.appendTo || document.body);\n    }\n\n    /**\n     * Resize the menu to its content.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {ContextMenuEvent} e\n     * @param {JQuery} $menu\n     * @param {boolean?} nested\n     */\n    resize(e, $menu, nested) {\n        let domMenu;\n        // determine widths of submenus, as CSS won't grow them automatically\n        // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\n        // kinda sucks hard...\n\n        // determine width of absolutely positioned element\n        $menu.css({position: 'absolute', display: 'block'});\n        // don't apply yet, because that would break nested elements' widths\n        $menu.data('width',\n            (domMenu = $menu.get(0)).getBoundingClientRect\n                ? Math.ceil(domMenu.getBoundingClientRect().width)\n                : $menu.outerWidth() + 1); // outerWidth() returns rounded pixels\n        // reset styles so they allow nested elements to grow/shrink naturally\n        $menu.css({\n            position: 'static',\n            minWidth: '0px',\n            maxWidth: '100000px'\n        });\n        // identify width of nested menus\n        $menu.find('> li > ul').each((index, element) => {\n            e.data.manager.operations.resize(e, $(element), true);\n        });\n        // reset and apply changes in the end because nested\n        // elements' widths wouldn't be calculatable otherwise\n        if (!nested) {\n            $menu.find('ul').addBack().css({\n                position: '',\n                display: '',\n                minWidth: '',\n                maxWidth: ''\n            }).outerWidth(function () {\n                return $(this).data('width');\n            });\n        }\n    }\n\n    /**\n     * Update the contextmenu, re-evaluates the whole menu (including disabled/visible callbacks)\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData?} currentMenuData\n     * @param {ContextMenuData?} rootMenuData\n     *\n     * @return {boolean} hasVisibleItems\n     */\n    update(e, currentMenuData, rootMenuData) {\n        const $trigger = this;\n        if (typeof rootMenuData === 'undefined') {\n            rootMenuData = currentMenuData;\n            rootMenuData.manager.operations.resize(e, currentMenuData.$menu);\n        }\n\n        let hasVisibleItems = false;\n\n        // re-check disabled for each item\n        currentMenuData.$menu.children().each(function (index, element) {\n            let $item = $(element);\n            let key = $item.data('contextMenuKey');\n            let item = currentMenuData.items[key];\n\n            let disabled = (typeof item.disabled === 'function' && item.disabled.call($trigger, e, key, currentMenuData, rootMenuData)) || item.disabled === true;\n            let visible;\n\n            if (typeof item.visible === 'function') {\n                visible = item.visible.call($trigger, e, key, currentMenuData, rootMenuData);\n            } else if (typeof item.visible !== 'undefined') {\n                visible = item.visible === true;\n            } else {\n                visible = true;\n            }\n\n            if (visible) {\n                hasVisibleItems = true;\n            }\n\n            $item[visible ? 'show' : 'hide']();\n\n            // dis- / enable item\n            $item[disabled ? 'addClass' : 'removeClass'](rootMenuData.classNames.disabled);\n\n            if (typeof item.icon === 'function') {\n                $item.removeClass(item._icon);\n                let iconResult = item.icon.call(this, $trigger, $item, key, item);\n                if (typeof iconResult === 'string') {\n                    $item.addClass(iconResult);\n                } else {\n                    $item.prepend(iconResult);\n                }\n            }\n\n            if (item.type) {\n                // dis- / enable input elements\n                $item.find('input, select, textarea').prop('disabled', disabled);\n\n                // update input states\n                switch (item.type) {\n                    case ContextMenuItemTypes.text:\n                    case ContextMenuItemTypes.textarea:\n                        item.$input.val(item.value || '');\n                        break;\n\n                    case ContextMenuItemTypes.checkbox:\n                    case ContextMenuItemTypes.radio:\n                        item.$input.val(item.value || '').prop('checked', !!item.selected);\n                        break;\n\n                    case ContextMenuItemTypes.select:\n                        item.$input.val((item.selected === 0 ? '0' : item.selected) || '');\n                        break;\n                }\n            }\n\n            if (item.$menu) {\n                // update sub-menu\n                let subMenuHasVisibleItems = rootMenuData.manager.operations.update.call($trigger, e, item, rootMenuData);\n                if (subMenuHasVisibleItems) {\n                    hasVisibleItems = true;\n                }\n            }\n        });\n\n        return hasVisibleItems;\n    }\n\n    /**\n     * Create the overlay layer so we can capture the click outside the menu and close it.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @param {number} zIndex\n     * @returns {jQuery}\n     */\n    layer(e, menuData, zIndex) {\n        const $window = $(window);\n\n        // add transparent layer for click area\n        // filter and background for Internet Explorer, Issue #23\n        const $layer = menuData.$layer = $('<div id=\"context-menu-layer\"></div>')\n            .css({\n                height: $window.height(),\n                width: $window.width(),\n                display: 'block',\n                position: 'fixed',\n                'z-index': zIndex,\n                top: 0,\n                left: 0,\n                opacity: 0,\n                filter: 'alpha(opacity=0)',\n                'background-color': '#000'\n            })\n            .data('contextMenuRoot', menuData)\n            .insertBefore(this)\n            .on('contextmenu', menuData.manager.handler.abortevent)\n            .on('mousedown', menuData.manager.handler.layerClick);\n\n        // IE6 doesn't know position:fixed;\n        if (typeof document.body.style.maxWidth === 'undefined') { // IE6 doesn't support maxWidth\n            $layer.css({\n                'position': 'absolute',\n                'height': $(document).height()\n            });\n        }\n\n        return $layer;\n    }\n\n    /**\n     * Process submenu promise.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} currentMenuData\n     * @param {ContextMenuData} rootMenuData\n     * @param {Promise} promise\n     */\n    processPromises(e, currentMenuData, rootMenuData, promise) {\n        // Start\n        currentMenuData.$node.addClass(rootMenuData.classNames.iconLoadingClass);\n\n        function finishPromiseProcess(currentMenuData, rootMenuData, items) {\n            if (typeof rootMenuData.$menu === 'undefined' || !rootMenuData.$menu.is(':visible')) {\n                return;\n            }\n            currentMenuData.$node.removeClass(rootMenuData.classNames.iconLoadingClass);\n            currentMenuData.items = items;\n            rootMenuData.manager.operations.create(e, currentMenuData, rootMenuData); // Create submenu\n            rootMenuData.manager.operations.update(e, currentMenuData, rootMenuData); // Correctly update position if user is already hovered over menu item\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu); // positionSubmenu, will only do anything if user already hovered over menu item that just got new subitems.\n        }\n\n        function errorPromise(currentMenuData, rootMenuData, errorItem) {\n            // User called promise.reject() with an error item, if not, provide own error item.\n            if (typeof errorItem === 'undefined') {\n                errorItem = {\n                    'error': {\n                        name: 'No items and no error item',\n                        icon: 'context-menu-icon context-menu-icon-quit'\n                    }\n                };\n                if (window.console) {\n                    (console.error || console.log).call(console, 'When you reject a promise, provide an \"items\" object, equal to normal sub-menu items');\n                }\n            } else if (typeof errorItem === 'string') {\n                errorItem = {'error': {name: errorItem}};\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, errorItem);\n        }\n\n        function completedPromise(currentMenuData, rootMenuData, items) {\n            // Completed promise (dev called promise.resolve). We now have a list of items which can\n            // be used to create the rest of the context menu.\n            if (typeof items === 'undefined') {\n                // Null result, dev should have checked\n                errorPromise(undefined); // own error object\n            }\n            finishPromiseProcess(currentMenuData, rootMenuData, items);\n        }\n\n        // Wait for promise completion. .then(success, error, notify) (we don't track notify). Bind the currentMenuData\n        // and rootMenuData to avoid scope problems\n        promise.then(completedPromise.bind(this, currentMenuData, rootMenuData), errorPromise.bind(this, currentMenuData, rootMenuData));\n    }\n\n    /**\n     * Operation that will run after contextMenu showed on screen.\n     *\n     * @method\n     * @memberOf ContextMenuOperations\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuData} menuData\n     * @return {undefined}\n     */\n    activated(e, menuData) {\n        const $menu = menuData.$menu;\n        const $menuOffset = $menu.offset();\n        const winHeight = $(window).height();\n        const winScrollTop = $(window).scrollTop();\n        const menuHeight = $menu.height();\n        if (menuHeight > winHeight) {\n            $menu.css({\n                'height': winHeight + 'px',\n                'overflow-x': 'hidden',\n                'overflow-y': 'auto',\n                'top': winScrollTop + 'px'\n            });\n        } else if (($menuOffset.top < winScrollTop) || ($menuOffset.top + menuHeight > winScrollTop + winHeight)) {\n            $menu.css({\n                'top': '0px'\n            });\n        }\n    }\n};\n","/**\n * @class ContextMenuHelper\n * @classdesc Few helper static functions\n */\nexport default class ContextMenuHelper {\n    /**\n     * Calculates zIndex of an element\n     * @memberOf ContextMenuHelper\n     * @method zindex\n     * @static\n     * @param {JQuery} $t - Element to calculate z-index of.\n     * @return {number} - Elements zIndex\n     */\n    static zindex($t) {\n        let zin = 0;\n        let $tt = $t;\n\n        while (true) {\n            zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\n            $tt = $tt.parent();\n            if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\n                break;\n            }\n        }\n        return zin;\n    }\n\n    /**\n     * Split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\n     * @memberOf ContextMenuHelper\n     * @method splitAccesskey\n     * @static\n     * @param {string} val - Accesskey value\n     * @return {Array} - Seperate keys to handle as accesskey\n     */\n    static splitAccesskey(val) {\n        let t = val.split(/\\s+/);\n        let keys = [];\n\n        for (let i = 0, k; k = t[i]; i++) {\n            k = k.charAt(0).toUpperCase(); // first character only\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\n            // a map to look up already used access keys would be nice\n            keys.push(k);\n        }\n\n        return keys;\n    }\n}\n","/**\n * Determine the position for a root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#determinePosition\n * @param {(JQuery)} $menu\n */\nexport function determinePosition($menu) {\n    // position to the lower middle of the trigger element\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'center top',\n            at: 'center bottom',\n            of: this,\n            offset: '0 5',\n            collision: 'fit'\n        }).css('display', 'none');\n    } else {\n        // determine contextMenu position\n        const offset = this.offset();\n        offset.top += this.outerHeight();\n        offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\n        $menu.css(offset);\n    }\n}\n\n/**\n * Position the root menu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#position\n * @param {JQuery.Event} e\n * @param {ContextMenuData} currentMenuData\n * @param {(number|string)} x\n * @param {(number|string)} y\n */\nexport function position(e, currentMenuData, x, y) {\n    const $window = $(window);\n    let offset;\n    // determine contextMenu position\n    if (!x && !y) {\n        currentMenuData.determinePosition.call(this, currentMenuData.$menu);\n        return;\n    } else if (x === 'maintain' && y === 'maintain') {\n        // x and y must not be changed (after re-show on command click)\n        offset = currentMenuData.$menu.position();\n    } else {\n        // x and y are given (by mouse event)\n        const offsetParentOffset = currentMenuData.$menu.offsetParent().offset();\n        offset = {top: y - offsetParentOffset.top, left: x - offsetParentOffset.left};\n    }\n\n    // correct offset if viewport demands it\n    const bottom = $window.scrollTop() + $window.height();\n    const right = $window.scrollLeft() + $window.width();\n    const height = currentMenuData.$menu.outerHeight();\n    const width = currentMenuData.$menu.outerWidth();\n\n    if (offset.top + height > bottom) {\n        offset.top -= height;\n    }\n\n    if (offset.top < 0) {\n        offset.top = 0;\n    }\n\n    if (offset.left + width > right) {\n        offset.left -= width;\n    }\n\n    if (offset.left < 0) {\n        offset.left = 0;\n    }\n\n    currentMenuData.$menu.css(offset);\n}\n\n/**\n * Position a submenu.\n * @memberOf ContextMenuOptions\n * @function ContextMenuOptions#positionSubmenu\n * @param {JQuery.Event} e\n * @param {JQuery} $menu\n */\n// position the sub-menu\nexport function positionSubmenu(e, $menu) {\n    if (typeof $menu === 'undefined') {\n        // When user hovers over item (which has sub items) handle.focusItem will call this.\n        // but the submenu does not exist yet if ContextMenuData.items is a promise. just return, will\n        // call positionSubmenu after promise is completed.\n        return;\n    }\n    if ($.ui && $.ui.position) {\n        // .position() is provided as a jQuery UI utility\n        // (...and it won't work on hidden elements)\n        $menu.css('display', 'block').position({\n            my: 'left top-5',\n            at: 'right top',\n            of: this,\n            collision: 'flipfit fit'\n        }).css('display', '');\n    } else {\n        // determine contextMenu position\n        const offset = {\n            top: -9,\n            left: this.outerWidth() - 5\n        };\n        $menu.css(offset);\n    }\n}\n","/**\n * @class ContextMenuHtml5Builder\n * @classdesc considering the following HTML `$.contextMenu.fromMenu($('#html5menu'))` will return a proper items object.\n\n ```\n <menu id=\"html5menu\" type=\"context\" style=\"display:none\">\n    <command label=\"rotate\" onclick=\"alert('rotate')\">\n    <command label=\"resize\" onclick=\"alert('resize')\">\n    <menu label=\"share\">\n        <command label=\"twitter\" onclick=\"alert('twitter')\">\n        <hr>\n        <command label=\"facebook\" onclick=\"alert('facebook')\">\n    </menu>\n </menu>\n ```\n\n `$.contextMenu.fromMenu()` will properly import (and thus handle) the following elements. Everything else is imported as `{type: \"html\"}`\n\n ```\n <menu>\n <hr>\n <a>\n <command type=\"command|radio|checkbox\"> (W3C Specification)\n <menuitem type=\"command|radio|checkbox\"> (Firefox)\n <input type=\"text|radio|checkbox\">\n <select>\n <textarea>\n <label for=\"someId\">\n <label> the text <input|textarea|select>\n ```\n\n The `<menu>` must be hidden but not removed, as all command events (clicks) are passed-thru to the original command element!\n\n Note: While the specs note `<option>`s to be renderd as regular commands, `$.contextMenu` will render an actual `<select>`.\n\n ## HTML5 `<menu>` shiv/polyfill\n\n Engaging the HTML5 polyfill (ignoring `$.contextMenu` if context menus are available natively):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\");\n });\n ```\n\n Engaging the HTML5 polyfill (ignoring browser native implementation):\n\n ```\n $(function(){\n    $.contextMenu(\"html5\", true);\n });\n ```\n\n */\nexport default class ContextMenuHtml5Builder {\n    /**\n     * Get the input label for the given node.\n     *\n     * @method inputLabel\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {HTMLElement} node - Html element\n     * @returns {string|JQuery|jQuery} - Input label element\n     */\n    inputLabel(node) {\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\n    }\n\n    /**\n     * Helper function to build ContextMenuItems from an html5 menu element.\n     *\n     * @method fromMenu\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {JQuery|string} element - Menu element or selector to generate the menu from.\n     * @returns {Object.<string, ContextMenuItem>} - Collection of {@link ContextMenuItem}\n     */\n    fromMenu(element) {\n        const $this = $(element);\n        const items = {};\n\n        this.build(items, $this.children());\n\n        return items;\n    }\n\n    /**\n     * Helper function for building a menu from a HTML menu element.\n     *\n     * @method build\n     * @memberOf ContextMenuHtml5Builder\n     * @instance\n     *\n     * @param {Object.<string, ContextMenuItem>} items - {@link ContextMenuItem} object to build.\n     * @param {(JQuery)} $children - Collection of elements inside the `<menu>` element\n     * @param {number?} counter - Counter to generate {@link ContextMenuItem} key names.\n     * @returns {number} - Counter to generate {@link ContextMenuItem} key names.\n     */\n    build(items, $children, counter) {\n        if (!counter) {\n            counter = 0;\n        }\n\n        let builder = this;\n\n        $children.each(function () {\n            let $node = $(this);\n            let node = this;\n            let nodeName = this.nodeName.toLowerCase();\n            let label;\n            let item;\n\n            // extract <label><input>\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\n                label = $node.text();\n                $node = $node.children().first();\n                node = $node.get(0);\n                nodeName = node.nodeName.toLowerCase();\n            }\n\n            /*\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\n             * Not being the sadistic kind, $.contextMenu only accepts:\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\n             */\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\n            switch (nodeName) {\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\n                case 'menu':\n                    item = {name: $node.attr('label'), items: {}};\n                    counter = builder.build(item.items, $node.children(), counter);\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\n                case 'a':\n                case 'button':\n                    item = {\n                        name: $node.text(),\n                        disabled: !!$node.attr('disabled'),\n                        callback: (function () {\n                            return function () {\n                                $node.get(0).click();\n                            };\n                        })()\n                    };\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\n                case 'menuitem':\n                case 'command':\n                    switch ($node.attr('type')) {\n                        case undefined:\n                        case 'command':\n                        case 'menuitem':\n                            item = {\n                                name: $node.attr('label'),\n                                disabled: !!$node.attr('disabled'),\n                                icon: $node.attr('icon'),\n                                callback: (function () {\n                                    return function () {\n                                        $node.get(0).click();\n                                    };\n                                })()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                radio: $node.attr('radiogroup'),\n                                value: $node.attr('id'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                    }\n                    break;\n\n                case 'hr':\n                    item = '-------';\n                    break;\n\n                case 'input':\n                    switch ($node.attr('type')) {\n                        case 'text':\n                            item = {\n                                type: 'text',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                value: $node.val()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                name: label || builder.inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                radio: !!$node.attr('name'),\n                                value: $node.val(),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                            break;\n                    }\n                    break;\n\n                case 'select':\n                    item = {\n                        type: 'select',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        selected: $node.val(),\n                        options: {}\n                    };\n                    $node.children().each(function () {\n                        item.options[this.value] = $(this).text();\n                    });\n                    break;\n\n                case 'textarea':\n                    item = {\n                        type: 'textarea',\n                        name: label || builder.inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        value: $node.val()\n                    };\n                    break;\n\n                case 'label':\n                    break;\n\n                default:\n                    item = {type: 'html', html: $node.clone(true)};\n                    break;\n            }\n\n            if (item) {\n                counter++;\n                items['key' + counter] = item;\n            }\n        });\n\n        return counter;\n    }\n}\n","import defaults from '../defaults';\n\nexport default class ContextMenuEventHandler {\n    /**\n     * @constructs ContextMenuEventHandler\n     * @constructor\n     * @property {?JQuery} $currentTrigger\n     * @property {Object} hoveract\n     */\n    constructor() {\n        this.$currentTrigger = null;\n        this.hoveract = {};\n    }\n\n    /**\n     * Helper to abort an event\n     *\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    abortevent(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    contextmenu(e) {\n        const $this = $(e.currentTarget);\n\n        if (!e.data) {\n            throw new Error('No data attached');\n        }\n\n        // disable actual context-menu if we are using the right mouse button as the trigger\n        if (e.data.trigger === 'right') {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // abort native-triggered events unless we're triggering on right click\n        if ((e.data.trigger !== 'right' && e.data.trigger !== 'demand') && e.originalEvent) {\n            return;\n        }\n\n        // Let the current contextmenu decide if it should show or not based on its own trigger settings\n        if (typeof e.mouseButton !== 'undefined') {\n            if (!(e.data.trigger === 'left' && e.mouseButton === 0) && !(e.data.trigger === 'right' && e.mouseButton === 2)) {\n                // Mouse click is not valid.\n                return;\n            }\n        }\n\n        // abort event if menu is visible for this trigger\n        if ($this.hasClass('context-menu-active')) {\n            return;\n        }\n\n        if (!$this.hasClass('context-menu-disabled')) {\n            // theoretically need to fire a show event at <menu>\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\n            // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\n            // e.data.$menu.trigger(evt);\n\n            e.data.manager.handler.$currentTrigger = $this;\n            if (e.data.build) {\n                const built = e.data.build(e, $this);\n                // abort if build() returned false\n                if (built === false) {\n                    return;\n                }\n\n                // dynamically build menu on invocation\n                e.data = $.extend(true, {}, defaults, e.data, built || {});\n\n                // abort if there are no items to display\n                if (!e.data.items || $.isEmptyObject(e.data.items)) {\n                    // Note: jQuery captures and ignores errors from event handlers\n                    if (window.console) {\n                        (console.error || console.log).call(console, 'No items specified to show in contextMenu');\n                    }\n\n                    throw new Error('No Items specified');\n                }\n\n                // backreference for custom command type creation\n                e.data.$trigger = e.data.manager.handler.$currentTrigger;\n\n                e.data.manager.operations.create(e, e.data);\n            }\n            // show menu\n            e.data.manager.operations.show.call($this, e, e.data, e.pageX, e.pageY);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    click(e) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        $(this).trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e}));\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    mousedown(e) {\n        // register mouse down\n        const $this = $(this);\n\n        // hide any previous menus\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && !e.data.manager.handler.$currentTrigger.is($this)) {\n            e.data.manager.handler.$currentTrigger.data('contextMenu').$menu.trigger($.Event('contextmenu', {\n                data: e.data,\n                originalEvent: e\n            }));\n        }\n\n        // activate on right click\n        if (e.button === 2) {\n            e.data.manager.handler.$currentTrigger = $this.data('contextMenuActive', true);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    mouseup(e) {\n        // show menu\n        const $this = $(this);\n        if ($this.data('contextMenuActive') && e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length && e.data.manager.handler.$currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            e.data.manager.handler.$currentTrigger = $this;\n            $this.trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY, originalEvent: e}));\n        }\n\n        $this.removeData('contextMenuActive');\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    mouseenter(e) {\n        const $this = $(this);\n        const $related = $(e.relatedTarget);\n        const $document = $(document);\n\n        // abort if we're coming from a menu\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        // abort if a menu is shown\n        if (e.data.manager.handler.$currentTrigger && e.data.manager.handler.$currentTrigger.length) {\n            return;\n        }\n\n        e.data.manager.handler.hoveract.pageX = e.pageX;\n        e.data.manager.handler.hoveract.pageY = e.pageY;\n        e.data.manager.handler.hoveract.data = e.data;\n        $document.on('mousemove.contextMenuShow', e.data.manager.handler.mousemove);\n        e.data.manager.handler.hoveract.timer = setTimeout(() => {\n            e.data.manager.handler.hoveract.timer = null;\n            $document.off('mousemove.contextMenuShow');\n            e.data.manager.handler.$currentTrigger = $this;\n            $this.trigger($.Event('contextmenu', {\n                data: e.data.manager.handler.hoveract.data,\n                pageX: e.data.manager.handler.hoveract.pageX,\n                pageY: e.data.manager.handler.hoveract.pageY\n            }));\n        }, e.data.delay);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    mousemove(e) {\n        e.data.manager.handler.hoveract.pageX = e.pageX;\n        e.data.manager.handler.hoveract.pageY = e.pageY;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    mouseleave(e) {\n        // abort if we're leaving for a menu\n        const $related = $(e.relatedTarget);\n        if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n            return;\n        }\n\n        try {\n            clearTimeout(e.data.manager.handler.hoveract.timer);\n        } catch (e) {\n\n        }\n\n        e.data.manager.handler.hoveract.timer = null;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    layerClick(e) {\n        let $this = $(this);\n        /** @var ContextMenuData **/\n        let root = $this.data('contextMenuRoot');\n\n        if (root === null || typeof root === 'undefined') {\n            throw new Error('No ContextMenuData found');\n        }\n\n        let button = e.button;\n        let x = e.pageX;\n        let y = e.pageY;\n        let fakeClick = x === undefined;\n        let target;\n        let offset;\n\n        e.preventDefault();\n\n        setTimeout(() => {\n            if (fakeClick) {\n                if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                    root.$menu.trigger('contextmenu:hide', {data: root, originalEvent: e});\n                }\n                return;\n            }\n\n            let $window = $(window);\n            let triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\n\n            // find the element that would've been clicked, wasn't the layer in the way\n            if (document.elementFromPoint && root.$layer) {\n                root.$layer.hide();\n                target = document.elementFromPoint(x - $window.scrollLeft(), y - $window.scrollTop());\n\n                // also need to try and focus this element if we're in a contenteditable area,\n                // as the layer will prevent the browser mouse action we want\n                if (target.isContentEditable) {\n                    const range = document.createRange();\n                    const sel = window.getSelection();\n                    range.selectNode(target);\n                    range.collapse(true);\n                    sel.removeAllRanges();\n                    sel.addRange(range);\n                }\n                $(target).trigger(e);\n                root.$layer.show();\n            }\n\n            if (root.hideOnSecondTrigger && triggerAction && root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.$menu.trigger('contextmenu:hide', {data: root, originalEvent: e});\n                return;\n            }\n\n            if (root.reposition && triggerAction) {\n                if (document.elementFromPoint) {\n                    if (root.$trigger.is(target)) {\n                        root.position.call(root.$trigger, e, root, x, y);\n                        return;\n                    }\n                } else {\n                    offset = root.$trigger.offset();\n                    const $window = $(window);\n                    // while this looks kinda awful, it's the best way to avoid\n                    // unnecessarily calculating any positions\n                    offset.top += $window.scrollTop();\n                    if (offset.top <= e.pageY) {\n                        offset.left += $window.scrollLeft();\n                        if (offset.left <= e.pageX) {\n                            offset.bottom = offset.top + root.$trigger.outerHeight();\n                            if (offset.bottom >= e.pageY) {\n                                offset.right = offset.left + root.$trigger.outerWidth();\n                                if (offset.right >= e.pageX) {\n                                    // reposition\n                                    root.position.call(root.$trigger, e, root, x, y);\n                                    return;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            if (target && triggerAction) {\n                root.$trigger.one('contextmenu:hidden', () => {\n                    $(target).contextMenu({x: x, y: y, button: button, originalEvent: e});\n                });\n            }\n\n            if (root.$menu !== null && typeof root.$menu !== 'undefined') {\n                root.$menu.trigger('contextmenu:hide', {data: root, originalEvent: e});\n            }\n        }, 50);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {ContextMenuItem} currentMenuData\n     */\n    keyStop(e, currentMenuData) {\n        if (!currentMenuData.isInput) {\n            e.preventDefault();\n        }\n\n        e.stopPropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    key(e) {\n        let rootMenuData = {};\n\n        // Only get the data from this.$currentTrigger if it exists\n        if (e.data.manager.handler.$currentTrigger) {\n            rootMenuData = e.data.manager.handler.$currentTrigger.data('contextMenu') || {};\n        }\n        // If the trigger happen on a element that are above the contextmenu do this\n        if (typeof rootMenuData.zIndex === 'undefined') {\n            rootMenuData.zIndex = 0;\n        }\n        const getZIndexOfTriggerTarget = (target) => {\n            if (target.style.zIndex !== '') {\n                return target.style.zIndex;\n            } else {\n                if (target.offsetParent !== null && typeof target.offsetParent !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.offsetParent);\n                } else if (target.parentElement !== null && typeof target.parentElement !== 'undefined') {\n                    return getZIndexOfTriggerTarget(target.parentElement);\n                }\n            }\n        };\n        let targetZIndex = getZIndexOfTriggerTarget(e.target);\n\n        // If targetZIndex is heigher then rootMenuData.zIndex dont progress any futher.\n        // This is used to make sure that if you are using a dialog with a input / textarea / contenteditable div\n        // and its above the contextmenu it wont steal keys events\n        if (rootMenuData.$menu && parseInt(targetZIndex, 10) > parseInt(rootMenuData.$menu.css('zIndex'), 10)) {\n            return;\n        }\n        switch (e.keyCode) {\n            case 9:\n            case 38: // up\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                // if keyCode is [38 (up)] or [9 (tab) with shift]\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9 && e.shiftKey) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            rootMenuData.$menu.trigger('prevcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 38 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else if (e.keyCode !== 9 || e.shiftKey) {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        rootMenuData.$menu.trigger('prevcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n            // omitting break;\n            // case 9: // tab - reached through omitted break;\n            case 40: // down\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (e.keyCode === 9) {\n                        e.preventDefault();\n                        if (rootMenuData.$selected) {\n                            rootMenuData.$selected.find('input, textarea, select').blur();\n                        }\n                        if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                            rootMenuData.$menu.trigger('nextcommand', {data: rootMenuData, originalEvent: e});\n                        }\n                        return;\n                    } else if (e.keyCode === 40 && rootMenuData.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                        // checkboxes don't capture this key\n                        e.preventDefault();\n                        return;\n                    }\n                } else {\n                    if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                        rootMenuData.$menu.trigger('nextcommand', {data: rootMenuData, originalEvent: e});\n                    }\n                    return;\n                }\n                break;\n\n            case 37: // left\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                if (!rootMenuData.$selected.parent().hasClass('context-menu-root')) {\n                    const $parent = rootMenuData.$selected.parent().parent();\n                    rootMenuData.$selected.trigger('contextmenu:blur', {data: rootMenuData, originalEvent: e});\n                    rootMenuData.$selected = $parent;\n                    return;\n                }\n                break;\n\n            case 39: // right\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput || !rootMenuData.$selected || !rootMenuData.$selected.length) {\n                    break;\n                }\n\n                const itemdata = rootMenuData.$selected.data('contextMenu') || {};\n                if (itemdata.$menu && rootMenuData.$selected.hasClass('context-menu-submenu')) {\n                    rootMenuData.$selected = null;\n                    itemdata.$selected = null;\n                    itemdata.$menu.trigger('nextcommand', {data: itemdata, originalEvent: e});\n                    return;\n                }\n                break;\n\n            case 35: // end\n            case 36: // home\n                if (rootMenuData.$selected && rootMenuData.$selected.find('input, textarea, select').length) {\n                    break;\n                } else {\n                    ((rootMenuData.$selected && rootMenuData.$selected.parent()) || rootMenuData.$menu)\n                        .children(':not(.' + rootMenuData.classNames.disabled + ', .' + rootMenuData.classNames.notSelectable + ')')[e.keyCode === 36 ? 'first' : 'last']()\n                        .trigger('contextmenu:focus', {data: rootMenuData, originalEvent: e});\n                    e.preventDefault();\n                    break;\n                }\n            case 13: // enter\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.isInput) {\n                    if (rootMenuData.$selected && !rootMenuData.$selected.is('textarea, select')) {\n                        e.preventDefault();\n                        return;\n                    }\n                    break;\n                }\n                if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                    rootMenuData.$selected.trigger('mouseup', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n            case 32: // space\n            case 33: // page up\n            case 34: // page down\n                // prevent browser from scrolling down while menu is visible\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                return;\n\n            case 27: // esc\n                e.data.manager.handler.keyStop(e, rootMenuData);\n                if (rootMenuData.$menu !== null && typeof rootMenuData.$menu !== 'undefined') {\n                    rootMenuData.$menu.trigger('contextmenu:hide', {data: rootMenuData, originalEvent: e});\n                }\n                return;\n\n            default: // 0-9, a-z\n                const k = (String.fromCharCode(e.keyCode)).toUpperCase();\n                if (rootMenuData.accesskeys && rootMenuData.accesskeys[k]) {\n                    // according to the specs accesskeys must be invoked immediately\n                    rootMenuData.accesskeys[k].$node.trigger(rootMenuData.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup', {\n                        data: rootMenuData,\n                        originalEvent: e\n                    });\n                    return;\n                }\n                break;\n        }\n        // pass event to selected item,\n        // stop propagation to avoid endless recursion\n        e.stopPropagation();\n        if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n            rootMenuData.$selected.trigger(e);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    prevItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        const rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $prev = !currentMenuData.$selected || !currentMenuData.$selected.prev().length ? $children.last() : currentMenuData.$selected.prev();\n        const $round = $prev;\n\n        // skip disabled or hidden elements\n        while ($prev.hasClass(rootMenuData.classNames.disabled) || $prev.hasClass(rootMenuData.classNames.notSelectable) || $prev.is(':hidden')) {\n            if ($prev.prev().length) {\n                $prev = $prev.prev();\n            } else {\n                $prev = $children.last();\n            }\n\n            if ($prev.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($prev.get(0), e);\n\n        // focus input\n        const $input = $prev.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    nextItem(e) {\n        e.stopPropagation();\n        let currentMenuData = $(this).data('contextMenu') || {};\n        let rootMenuData = $(this).data('contextMenuRoot') || {};\n\n        // obtain currently selected menu\n        if (currentMenuData.$selected) {\n            const $s = currentMenuData.$selected;\n            currentMenuData = currentMenuData.$selected.parent().data('contextMenu') || {};\n            currentMenuData.$selected = $s;\n        }\n\n        const $children = currentMenuData.$menu.children();\n        let $next = !currentMenuData.$selected || !currentMenuData.$selected.next().length ? $children.first() : currentMenuData.$selected.next();\n        const $round = $next;\n\n        // skip disabled\n        while ($next.hasClass(rootMenuData.classNames.disabled) || $next.hasClass(rootMenuData.classNames.notSelectable) || $next.is(':hidden')) {\n            if ($next.next().length) {\n                $next = $next.next();\n            } else {\n                $next = $children.first();\n            }\n            if ($next.is($round)) {\n                // break endless loop\n                return;\n            }\n        }\n\n        // leave current\n        if (currentMenuData.$selected) {\n            rootMenuData.manager.handler.itemMouseleave.call(currentMenuData.$selected.get(0), e);\n        }\n\n        // activate next\n        rootMenuData.manager.handler.itemMouseenter.call($next.get(0), e);\n\n        // focus input\n        const $input = $next.find('input, textarea, select');\n        if ($input.length) {\n            $input.focus();\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    focusInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.$selected = currentMenuData.$selected = $this;\n        rootMenuData.isInput = currentMenuData.isInput = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    blurInput(e) {\n        let $this = $(this).closest('.context-menu-item');\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.isInput = currentMenuData.isInput = false;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    menuMouseenter(e) {\n        let root = $(this).data().contextMenuRoot;\n        root.hovering = true;\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    menuMouseleave(e) {\n        let root = $(this).data().contextMenuRoot;\n        if (root.$layer && root.$layer.is(e.relatedTarget)) {\n            root.hovering = false;\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    itemMouseenter(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        rootMenuData.hovering = true;\n\n        // abort if we're re-entering\n        if (e && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n        }\n\n        // make sure only one item is selected\n        let targetMenu = (currentMenuData.$menu ? currentMenuData : rootMenuData);\n        targetMenu.$menu\n            .children('.' + rootMenuData.classNames.hover).trigger('contextmenu:blur', {\n                data: targetMenu,\n                originalEvent: e\n            })\n            .children('.hover').trigger('contextmenu:blur', {data: targetMenu, originalEvent: e});\n\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\n            currentMenuData.$selected = null;\n            return;\n        }\n\n        $this.trigger('contextmenu:focus', {data: currentMenuData, originalEvent: e});\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    itemMouseleave(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData !== currentMenuData && rootMenuData.$layer && rootMenuData.$layer.is(e.relatedTarget)) {\n            if (typeof rootMenuData.$selected !== 'undefined' && rootMenuData.$selected !== null) {\n                rootMenuData.$selected.trigger('contextmenu:blur', {data: rootMenuData, originalEvent: e});\n            }\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            rootMenuData.$selected = currentMenuData.$selected = currentMenuData.$node;\n            return;\n        }\n\n        if (currentMenuData && currentMenuData.$menu && currentMenuData.$menu.hasClass(rootMenuData.classNames.visible)) {\n            return;\n        }\n\n        $this.trigger('contextmenu:blur');\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    itemClick(e) {\n        let $this = $(this);\n        let data = $this.data();\n        let currentMenuData = data.contextMenu;\n        let rootMenuData = data.contextMenuRoot;\n        let key = data.contextMenuKey;\n        let callback;\n\n        // abort if the key is unknown or disabled or is a menu\n        if (!currentMenuData.items[key] || $this.is('.' + rootMenuData.classNames.disabled + ', .context-menu-separator, .' + rootMenuData.classNames.notSelectable) || ($this.is('.context-menu-submenu') && rootMenuData.selectableSubMenu === false)) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        if (typeof currentMenuData.callbacks[key] === 'function' && Object.prototype.hasOwnProperty.call(currentMenuData.callbacks, key)) {\n            // item-specific callback\n            callback = currentMenuData.callbacks[key];\n        } else if (typeof rootMenuData.callback === 'function') {\n            // default callback\n            callback = rootMenuData.callback;\n        } else {\n            // no callback, no action\n            return;\n        }\n\n        // hide menu if callback doesn't stop that\n        if (callback.call(rootMenuData.$trigger, e, key, currentMenuData, rootMenuData) !== false) {\n            rootMenuData.$menu.trigger('contextmenu:hide');\n        } else if (rootMenuData.$menu.parent().length) {\n            rootMenuData.manager.operations.update.call(rootMenuData.$trigger, e, rootMenuData);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    inputClick(e) {\n        e.stopImmediatePropagation();\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     * @param {Object} data\n     */\n    hideMenu(e, data) {\n        const root = $(this).data('contextMenuRoot');\n        root.manager.operations.hide.call(root.$trigger, e, root, data && data.force);\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    focusItem(e) {\n        e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if ($this.hasClass(rootMenuData.classNames.disabled) || $this.hasClass(rootMenuData.classNames.notSelectable)) {\n            return;\n        }\n\n        $this\n            .addClass([rootMenuData.classNames.hover, rootMenuData.classNames.visible].join(' '))\n            // select other items and included items\n            .parent().find('.context-menu-item').not($this)\n            .removeClass(rootMenuData.classNames.visible)\n            .filter('.' + rootMenuData.classNames.hover)\n            .trigger('contextmenu:blur');\n\n        // remember selected\n        currentMenuData.$selected = rootMenuData.$selected = $this;\n\n        if (currentMenuData.$node && currentMenuData.$node.hasClass('context-menu-submenu')) {\n            currentMenuData.$node.addClass(rootMenuData.classNames.hover);\n        }\n\n        // position sub-menu - do after show so dumb $.ui.position can keep up\n        if (currentMenuData.$node) {\n            rootMenuData.positionSubmenu.call(currentMenuData.$node, e, currentMenuData.$menu);\n        }\n    }\n\n    /**\n     * @method\n     * @memberOf ContextMenuEventHandler\n     * @instance\n     *\n     * @param {JQuery.Event} e\n     */\n    blurItem(e) {\n        e.stopPropagation();\n        const $this = $(this);\n        const data = $this.data();\n        const currentMenuData = data.contextMenu;\n        const rootMenuData = data.contextMenuRoot;\n\n        if (rootMenuData.autoHide) { // for tablets and touch screens this needs to remain\n            $this.removeClass(rootMenuData.classNames.visible);\n        }\n        $this.removeClass(rootMenuData.classNames.hover);\n        currentMenuData.$selected = null;\n    }\n};\n","/**\n * The jQuery plugin namespace.\n * @external \"jQuery.fn\"\n * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}\n */\n\n/**\n * Function that is called when calling contextmenu on an element (eg. $('.contextmenu').contextMenu()).\n *\n * @instance\n * @function external:jQuery.fn.contextmenu\n *\n * @param {(string|Object)} operation\n * @returns {JQuery}\n */\nexport default function (operation) {\n    const $t = this;\n    const $o = operation;\n    if ($t.length > 0) { // this is not a build on demand menu\n        if (typeof operation === 'undefined') {\n            $t.first().trigger('contextmenu');\n        } else if (typeof operation.x !== 'undefined' && typeof operation.y !== 'undefined') {\n            $t.first().trigger($.Event('contextmenu', {\n                pageX: operation.x,\n                pageY: operation.y,\n                mouseButton: operation.button\n            }));\n        } else if (operation === 'hide') {\n            const $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\n            if ($menu) {\n                $menu.trigger('contextmenu:hide');\n            }\n        } else if (operation === 'destroy') {\n            $.contextMenu('destroy', {context: this});\n        } else if (operation === 'update') {\n            $.contextMenu('update', {context: this});\n        } else if ($.isPlainObject(operation)) {\n            operation.context = this;\n            $.contextMenu('create', operation);\n        } else if (operation === true) {\n            $t.removeClass('context-menu-disabled');\n        } else if (operation === false) {\n            $t.addClass('context-menu-disabled');\n        }\n    } else {\n        // eslint-disable-next-line no-undef\n        $.each($.contextMenu.menus, function () {\n            if (this.selector === $t.selector) {\n                $o.data = this;\n\n                $.extend($o.data, {trigger: 'demand'});\n            }\n        });\n\n        $.contextMenu.handle.contextmenu.call($o.target, $o);\n    }\n\n    return this;\n}\n"],"sourceRoot":""}